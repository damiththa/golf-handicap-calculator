Comment: A step function that calculates golf handicap and updates airtable table entry
StartAt: roundEntriesGET
States:  
  roundEntriesGET:
    Type: Task
    Resource: arn:aws:states:::lambda:invoke
    Parameters:
      FunctionName: { "Fn::Join": [ ":", ["arn:aws:lambda:us-east-2", { "Ref": "AWS::AccountId" }, "function:${self:service}-${self:provider.stage}-getRounds"]] }
      Payload:
        Input.$: "$"
    Next: findHandicapDifferential

  findHandicapDifferential:
    Type: Task
    Resource: arn:aws:states:::lambda:invoke
    Parameters:
      FunctionName: { "Fn::Join": [ ":", ["arn:aws:lambda:us-east-2", { "Ref": "AWS::AccountId" }, "function:${self:service}-${self:provider.stage}-doHandicapDifferential"]] }
      Payload:
        Input.$: "$.Payload" # Getting only the payload at the input
        # Input.$: "$" # NOTEME: Making it like this will send everything (i.e. Payload and metadata) 
    Next: postHandicapIndex
  
  postHandicapIndex:
    Type: Task
    Resource: arn:aws:states:::lambda:invoke
    Parameters:
      FunctionName: { "Fn::Join": [ ":", ["arn:aws:lambda:us-east-2", { "Ref": "AWS::AccountId" }, "function:${self:service}-${self:provider.stage}-postHandicapIndex"]] }
      Payload:
        Input.$: "$.Payload" # Getting only the payload at the input
    End: true